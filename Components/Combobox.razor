@typeparam TItem


<div class="@Classes" @ref="_rootRef">
    <label class="combo-label">@Label</label>
    <button class="@InputClasses" @onclick="ToggleDropdown">
        @if (Value is not null)
        {
            if (SelectedTemplate is not null)
            {
                @SelectedTemplate(Value)
            }
            else
            {
                <span>@GetItemString(Value)</span>
            }
        }
        else
        {
            <span class="combo-placeholder">@Placeholder</span>
        }

        <span class="combo-chevron combo-adornment">
            @(IsOpen ? ChevronDown : ChevronUp)
        </span>
    </button>

    @if (IsOpen)
    {
        <div class="@DropdownClasses" @onmousedown:preventDefault>
            <div class="combo-search-input-container">
                <span class="combo-search-icon combo-adornment">@Search</span>
                <input @ref="_elementReference" class="combo-search-input" placeholder="Search..." value="@SearchText" @oninput="OnInput" @onkeydown="HandleKeyDown"/>
            </div>

            <div class="combo-content-container">

                <Virtualize @ref="_virtualizeRef" ItemsProvider="LoadItems" ItemSize="40">
                    <ItemContent Context="item">
                        <div class="combo-item @(IsHighlighted(item) ? "highlighted" : "")" @onclick="@(() => ItemClicked(item))">
                            <div class="combo-item-content">
                                @if (ShowCheckmarkInList && IsSelectedItem(item))
                                {
                                    <span class="combo-checkmark combo-adornment">@CheckMark</span>
                                }
                                else
                                {
                                    <span class="combo-checkmark combo-adornment" style="opacity: 0">@CheckMark</span>
                                }
                                @if (ItemTemplate != null)
                                {
                                    @ItemTemplate(item)
                                }
                                else
                                {
                                    <span>@GetItemString(item)</span>
                                }
                            </div>
                        </div>
                    </ItemContent>
                </Virtualize>

                @if (ShowNoResults)
                {
                    <div class="combo-no-results">
                        @if (NoResultsTemplate == null)
                        {
                            <p>No results</p>
                        }
                        else
                        {
                            @NoResultsTemplate
                        }
                    </div>
                }

                @if (IsLoading)
                {
                    <div class="combo-loading">
                        Loading...
                    </div>
                }

            </div>
        </div>
    }
</div>


@code {
    private RenderFragment CheckMark => @<svg xmlns="http://www.w3.org/2000/svg" height="16px" width="16px"
                                              viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                              stroke-linejoin="round" class="lucide lucide-check-icon lucide-check">
                                            <path d="M20 6 9 17l-5-5"/>
                                        </svg>;

    private RenderFragment ChevronDown => @<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                                stroke-linejoin="round" class="lucide lucide-chevron-down-icon lucide-chevron-down">
                                              <path d="m6 9 6 6 6-6"/>
                                          </svg>;

    private RenderFragment ChevronUp => @<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                              fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                              class="lucide lucide-chevron-up-icon lucide-chevron-up">
                                            <path d="m18 15-6-6-6 6"/>
                                        </svg>;

    private RenderFragment Search => @<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                           fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                           class="lucide lucide-search-icon lucide-search">
                                         <path d="m21 21-4.34-4.34"/>
                                         <circle cx="11" cy="11" r="8"/>
                                     </svg>;
}